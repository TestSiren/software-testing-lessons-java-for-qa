package ru.stqa.addressbook.tests;
// Generated by Selenium IDE
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;
import ru.stqa.addressbook.manager.GroupHelper;
import ru.stqa.addressbook.models.GroupData;


import java.util.ArrayList;
import java.util.Comparator;

import static org.junit.jupiter.api.Assertions.assertTrue;

public class GroupCreationTests extends TestBase {


  @ParameterizedTest
  @MethodSource("ru.stqa.addressbook.dataproviders.GroupProvider#groupProvider")
  public void creationMultipleGroups(GroupData group){
    GroupHelper groups = app.groups();

    var oldGroups = groups.getListGroups();

    groups.createGroup(group);

    var newGroups = groups.getListGroups();

    Comparator<GroupData> compareById = (o1, o2) -> {
      return Integer.compare(Integer.parseInt(o1.id()), Integer.parseInt(o2.id()));
    };
    newGroups.sort(compareById);

    var expectedList = new ArrayList<>(oldGroups);
    expectedList.add(group.withId(newGroups.get(newGroups.size() - 1).id()).withHeader("").withFooter(""));
    expectedList.sort(compareById);

    Assertions.assertEquals(newGroups, expectedList);
  }

  @ParameterizedTest
  @MethodSource("ru.stqa.addressbook.dataproviders.GroupProvider#negativeGroupProvider")
  public void cannotCreateGroup(GroupData group){
    GroupHelper groups = app.groups();

    var oldGroups = groups.getListGroups();

    groups.createGroup(group);

    var newGroups = groups.getListGroups();

    Assertions.assertEquals(newGroups, oldGroups);

  }
}
