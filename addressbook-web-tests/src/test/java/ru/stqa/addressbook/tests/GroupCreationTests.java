package ru.stqa.addressbook.tests;
// Generated by Selenium IDE
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;
import ru.stqa.addressbook.manager.GroupHelper;
import ru.stqa.addressbook.models.GroupData;
import static ru.stqa.addressbook.comporators.GroupComporators.compareByIdAndName;
import java.util.ArrayList;

public class GroupCreationTests extends TestBase {


  @ParameterizedTest
  @MethodSource("ru.stqa.addressbook.dataproviders.GroupProvider#singleRandomGroup")
  public void creationMultipleGroups(GroupData group){
    GroupHelper groups = app.groups();

    var oldGroups = app.hbm().getGroupList();

    groups.createGroup(group);

    var newGroups = app.hbm().getGroupList();

    newGroups.sort(compareByIdAndName);

    var maxId = newGroups.get(newGroups.size() - 1).id();

    var expectedList = new ArrayList<>(oldGroups);
    expectedList.add(group
            .withId(maxId)
            .withName(group.name()));
    expectedList.sort(compareByIdAndName);

    Assertions.assertEquals(newGroups, expectedList);

//id и имя сравнивать
    var NewUIgroups = groups.getListGroups();
    NewUIgroups.sort(compareByIdAndName);
    Assertions.assertEquals(NewUIgroups, expectedList);

  }

  @ParameterizedTest
  @MethodSource("ru.stqa.addressbook.dataproviders.GroupProvider#negativeGroupProvider")
  public void cannotCreateGroup(GroupData group){
    GroupHelper groups = app.groups();

    var oldGroups = groups.getListGroups();

    groups.createGroup(group);

    var newGroups = groups.getListGroups();

    Assertions.assertEquals(newGroups, oldGroups);

  }
}
